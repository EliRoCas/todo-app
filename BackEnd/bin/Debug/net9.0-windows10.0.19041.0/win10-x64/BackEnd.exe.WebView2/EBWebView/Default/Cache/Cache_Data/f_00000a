import {
  ArgumentOutOfRangeError,
  AsyncSubject,
  BehaviorSubject,
  ConnectableObservable,
  EMPTY,
  EmptyError,
  NEVER,
  NotFoundError,
  Notification,
  NotificationKind,
  ObjectUnsubscribedError,
  Observable,
  ReplaySubject,
  Scheduler,
  SequenceError,
  Subject,
  Subscriber,
  Subscription,
  TimeoutError,
  UnsubscriptionError,
  VirtualAction,
  VirtualTimeScheduler,
  animationFrame,
  animationFrameScheduler,
  animationFrames,
  asap,
  asapScheduler,
  async,
  asyncScheduler,
  audit,
  auditTime,
  bindCallback,
  bindNodeCallback,
  buffer,
  bufferCount,
  bufferTime,
  bufferToggle,
  bufferWhen,
  catchError,
  combineAll,
  combineLatest,
  combineLatestAll,
  combineLatestWith,
  concat,
  concatAll,
  concatMap,
  concatMapTo,
  concatWith,
  config,
  connect,
  connectable,
  count,
  debounce,
  debounceTime,
  defaultIfEmpty,
  defer,
  delay,
  delayWhen,
  dematerialize,
  distinct,
  distinctUntilChanged,
  distinctUntilKeyChanged,
  elementAt,
  empty,
  endWith,
  every,
  exhaust,
  exhaustAll,
  exhaustMap,
  expand,
  filter,
  finalize,
  find,
  findIndex,
  first,
  firstValueFrom,
  flatMap,
  forkJoin,
  from,
  fromEvent,
  fromEventPattern,
  generate,
  groupBy,
  identity,
  ignoreElements,
  iif,
  interval,
  isEmpty,
  isObservable,
  last,
  lastValueFrom,
  map,
  mapTo,
  materialize,
  max,
  merge,
  mergeAll,
  mergeMap,
  mergeMapTo,
  mergeScan,
  mergeWith,
  min,
  multicast,
  never,
  noop,
  observable,
  observeOn,
  of,
  onErrorResumeNext,
  onErrorResumeNextWith,
  pairs,
  pairwise,
  partition,
  pipe,
  pluck,
  publish,
  publishBehavior,
  publishLast,
  publishReplay,
  queue,
  queueScheduler,
  race,
  raceWith,
  range,
  reduce,
  refCount,
  repeat,
  repeatWhen,
  retry,
  retryWhen,
  sample,
  sampleTime,
  scan,
  scheduled,
  sequenceEqual,
  share,
  shareReplay,
  single,
  skip,
  skipLast,
  skipUntil,
  skipWhile,
  startWith,
  subscribeOn,
  switchAll,
  switchMap,
  switchMapTo,
  switchScan,
  take,
  takeLast,
  takeUntil,
  takeWhile,
  tap,
  throttle,
  throttleTime,
  throwError,
  throwIfEmpty,
  timeInterval,
  timeout,
  timeoutWith,
  timer,
  timestamp,
  toArray,
  using,
  window,
  windowCount,
  windowTime,
  windowToggle,
  windowWhen,
  withLatestFrom,
  zip,
  zipAll,
  zipWith
} from "/@fs/C:/DV/todo-app/FrontEnd/.angular/cache/20.0.3/todo-app/vite/deps/chunk-3KKC7HMJ.js?v=da094405";
import "/@fs/C:/DV/todo-app/FrontEnd/.angular/cache/20.0.3/todo-app/vite/deps/chunk-WDMUDEB6.js?v=da094405";
export {
  ArgumentOutOfRangeError,
  AsyncSubject,
  BehaviorSubject,
  ConnectableObservable,
  EMPTY,
  EmptyError,
  NEVER,
  NotFoundError,
  Notification,
  NotificationKind,
  ObjectUnsubscribedError,
  Observable,
  ReplaySubject,
  Scheduler,
  SequenceError,
  Subject,
  Subscriber,
  Subscription,
  TimeoutError,
  UnsubscriptionError,
  VirtualAction,
  VirtualTimeScheduler,
  animationFrame,
  animationFrameScheduler,
  animationFrames,
  asap,
  asapScheduler,
  async,
  asyncScheduler,
  audit,
  auditTime,
  bindCallback,
  bindNodeCallback,
  buffer,
  bufferCount,
  bufferTime,
  bufferToggle,
  bufferWhen,
  catchError,
  combineAll,
  combineLatest,
  combineLatestAll,
  combineLatestWith,
  concat,
  concatAll,
  concatMap,
  concatMapTo,
  concatWith,
  config,
  connect,
  connectable,
  count,
  debounce,
  debounceTime,
  defaultIfEmpty,
  defer,
  delay,
  delayWhen,
  dematerialize,
  distinct,
  distinctUntilChanged,
  distinctUntilKeyChanged,
  elementAt,
  empty,
  endWith,
  every,
  exhaust,
  exhaustAll,
  exhaustMap,
  expand,
  filter,
  finalize,
  find,
  findIndex,
  first,
  firstValueFrom,
  flatMap,
  forkJoin,
  from,
  fromEvent,
  fromEventPattern,
  generate,
  groupBy,
  identity,
  ignoreElements,
  iif,
  interval,
  isEmpty,
  isObservable,
  last,
  lastValueFrom,
  map,
  mapTo,
  materialize,
  max,
  merge,
  mergeAll,
  mergeMap,
  mergeMapTo,
  mergeScan,
  mergeWith,
  min,
  multicast,
  never,
  noop,
  observable,
  observeOn,
  of,
  onErrorResumeNext,
  onErrorResumeNextWith,
  pairs,
  pairwise,
  partition,
  pipe,
  pluck,
  publish,
  publishBehavior,
  publishLast,
  publishReplay,
  queue,
  queueScheduler,
  race,
  raceWith,
  range,
  reduce,
  refCount,
  repeat,
  repeatWhen,
  retry,
  retryWhen,
  sample,
  sampleTime,
  scan,
  scheduled,
  sequenceEqual,
  share,
  shareReplay,
  single,
  skip,
  skipLast,
  skipUntil,
  skipWhile,
  startWith,
  subscribeOn,
  switchAll,
  switchMap,
  switchMapTo,
  switchScan,
  take,
  takeLast,
  takeUntil,
  takeWhile,
  tap,
  throttle,
  throttleTime,
  throwError,
  throwIfEmpty,
  timeInterval,
  timeout,
  timeoutWith,
  timer,
  timestamp,
  toArray,
  using,
  window,
  windowCount,
  windowTime,
  windowToggle,
  windowWhen,
  withLatestFrom,
  zip,
  zipAll,
  zipWith
};

//# sourceMappingURL=data:application/json;base64,